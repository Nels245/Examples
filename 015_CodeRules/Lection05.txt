Набор правил при написании кода (общие принципы):

Имя переменных
Имя метода
Имя аргумента

Design guidelines:

https://docs.microsoft.com/en-us/dotnet/standart/design-guidelines/

Гайды по языкам.





Правила хорошего тона:

Код - чаще читается, чем пишется (его будут проверять, читать, тестировать)
Стараться не использовать сокращения кроме общепринятых в разрабатываемом продукте.
Не использовать имена конфликтующими со стандартными идентификаторами
Не нужно использовать слишком сложные слова
Никогда не использовать мат

CanScrollHorizontaly лучше, чем ScrllableX

В C# не использовать _ - и другие символы.
Не использовать слова из списка:
https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html
Не сокращать там где не надо.
Не использовать акронимы SendPM(int i, string t) точно хуже чем SendPrivateMessage(int id, string text)
Использовать общие не привязанные к контексту имена string value лучше чем string str
Именование методов, аргументов, переменных и других еднииц отличается (Методы с большой буквы, аргументы с маленькой)
А вообще по каждому языку правила свои.

Нотации:
Pascal - BackColor
Camel - backColor


14. Избегайте длинных строк, переносите конструкции на следующую строку

Во втором примере проверка сложного логического устройства
15. Использование форматирование кода после написания (в IDE)

alt + shift + f

16. 
Красота, логический метод в одну строку



17.
https://www.npmjs.com//is-even - полезные кодики

Для методов используйте: Нотацию - Pascal

GetStream()

Если метод асинхронный, он заканчивается на асинк

GetStreamAsync()

Для переменных используйте Camel нотацию

Типы данных

Не используйте (var) там где она не нужна (неявный тип данных)

Тип переменной можно узнать:

int a = 12;
Console.WriteLine(a.getType());

system.Int32


using System.Linq; // какие то библиотеки, буквально)
var a = 12;
Console.WriteLine(a.getType());

var data = new int[]{1,2,3,4}
    .Where(e => e > 0) //е больше нуля
    .Select(e=> new{q = e, w = e + 1});
Console.WriteLine(data.GetType().Name);

– вылезет каляка маляка

18. Объявляйте переменные непосредственно перед их использованием

19. Имена в счетчиках: i, j, k, m, n - не придумывать другие, если этого не требуют условия

20. Инициализировать переменные при объявлении

21. Цепочки вызовов методов стоят особняком

Не делать такие каскады)

22. Не разбрасывать
В одном месте описываются поля, в другом методы, т.е системные единицы все рядышком.

23. Комментирование кода, не надо писать очевидные вещи, вот описание метода годная тема, по крайней мере для себя по началу

Комментарий(тэг)  to do - не знаем как делать задачу сейчас

24. Не писать все на одном листе, лучше разбивать по “папкам”, 1 метод на 1 единицу страницы и харошь. (не более 100-120 строк кода)

25. Подключать словари для подсветки опечаток или ошибок.
